name: CI/CD Docker Build and Publish

on:
  push:
    branches:
      - main # Se déclenche uniquement quand un commit est poussé sur la branche main
      - develop # Se déclenche uniquement quand un commit est poussé sur la branche develop
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build-and-test-java:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérifier le code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Étape 2 : Configurer Java et effectuer les tests (ou ton action précédente)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "21"

      - name: Build and test with Maven
        run: mvn clean verify
        working-directory: backend

  build-analyze-sonar:
    needs: build-and-test-java
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérifier le code
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      # Étape 2 : Configu rer Java et effectuer les tests (ou ton action précédente)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: "21"
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and test with Maven
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Enzouz12_cpe-ecalleya-devops
        working-directory: backend
    # define job to build and publish docker image
  build-and-push-docker-image:
    needs: build-analyze-sonar
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-22.04

    # steps to perform in job
    steps:
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build image and push backend
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./backend
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKER_USERNAME}}/tp-devops-backend:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push database
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./database
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKER_USERNAME}}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push frontend
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./frontend
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKER_USERNAME}}/tp-devops-frontend:latest
          push: ${{ github.ref == 'refs/heads/main' }}
